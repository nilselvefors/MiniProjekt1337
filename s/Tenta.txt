Sorteringsalgorytmer:

bubbelsort 				O(n^2) J칛mf칬r a[i] med a[i +1].
insertsort				O(n^2) Placerar fr친n osorterad array till sorterad array. Bra d친 elementen 칛r typ sorterade och det inte finns f칬r m친nga pltser att s칬ka p친 i arreyn
selectionsort			O(n^2) Placerar MINSTA fr친n osorterad array till sorterad array. Fungerar ungef칛r som insertsort. Bra d친 de inte finns fler platser 칛n 30ish.
mergesort				O(nlog(N)) Halverar arrayen till mindre arrayer tills alla 칛r uppdelade separat. L칛gger sedan tillbaka dem p친 samma s칛tt fast omv칛nt. KR츿VER MER MINNE 츿N VAD SOM TAS UPP AV ARRAYEN!!!!
quicksort				O(nlog(N)) Anv칛nder sig av Pivot (Median of three). Flyttar pivot till slutet av array. kollar f칬rsta Item fr친n h칛ger som 칛r st칬rre 칛n pivot och f칬rsta item fr친n v칛nster som 칛r st칬rre 칛n pivot. J칛mf칬r dessa med varandra och byter plats p친 dem om de kr칛vs. 
heapsort				O(nlog(N)) fungerar som ett "tr칛d" d칛r de minsta v칛rdena 칛r h칬gst upp

Binary Search
- Tidskomplexitet log(n) 
-k他s T(n) = (n/2) +1 ggr
- den m痘te vara sorterad f他 att fungera
-


Datastrukturer:
K칐 
Stack
List
Linked list
Array
Hashtabell
Tr칛d
